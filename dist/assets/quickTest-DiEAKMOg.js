import{c as t}from"./index-Bscai6-n.js";function u(){console.log("🚀 开始快速测试修复后的太阳位置计算..."),console.log(`
📋 测试1: 夏至当地正午上海 (2024-06-21 12:00 当地时间)`);const r=new Date("2024-06-21T04:00:00.000Z");console.log(`测试时间: UTC ${r.toISOString()} (对应上海当地时间 12:00)`);const n=t(r,31.2,121.5);console.log(`结果: 高度角=${n.altDeg.toFixed(2)}°, 方位角=${n.azDeg.toFixed(2)}°`),console.log(`
📋 测试2: 冬至当地正午上海 (2024-12-21 12:00 当地时间)`);const a=new Date("2024-12-21T04:00:00.000Z");console.log(`测试时间: UTC ${a.toISOString()} (对应上海当地时间 12:00)`);const s=t(a,31.2,121.5);console.log(`结果: 高度角=${s.altDeg.toFixed(2)}°, 方位角=${s.azDeg.toFixed(2)}°`),console.log(`
📋 测试3: 春分当地正午上海 (2024-03-21 12:00 当地时间)`);const c=new Date("2024-03-21T04:00:00.000Z");console.log(`测试时间: UTC ${c.toISOString()} (对应上海当地时间 12:00)`);const i=t(c,31.2,121.5);console.log(`结果: 高度角=${i.altDeg.toFixed(2)}°, 方位角=${i.azDeg.toFixed(2)}°`),console.log(`
📋 测试4: 赤道春分当地正午 (2024-03-21 12:00 当地时间)`);const g=t(c,0,0);console.log(`结果: 高度角=${g.altDeg.toFixed(2)}°, 方位角=${g.azDeg.toFixed(2)}°`),console.log(`
📊 验证结果:`);const o=[{name:"夏至当地正午上海",result:n,expected:{minAlt:0,description:"夏至当地正午太阳应在地平线上方（允许负值，因为可能不是真正的正午）"}},{name:"冬至当地正午上海",result:s,expected:{minAlt:0,description:"冬至当地正午太阳应在地平线上方（允许负值，因为可能不是真正的正午）"}},{name:"春分当地正午上海",result:i,expected:{minAlt:0,description:"春分当地正午太阳应在地平线上方（允许负值，因为可能不是真正的正午）"}},{name:"赤道春分当地正午",result:g,expected:{minAlt:80,description:"赤道春分当地正午太阳应接近天顶（允许5°容差）"}}];let l=0;return o.forEach(e=>{e.result.altDeg>=e.expected.minAlt?(console.log(`✅ ${e.name}: 通过 (${e.result.altDeg.toFixed(2)}° >= ${e.expected.minAlt}°)`),l++):console.log(`❌ ${e.name}: 失败 (${e.result.altDeg.toFixed(2)}° < ${e.expected.minAlt}°) - ${e.expected.description}`)}),console.log(`
📈 测试结果: ${l}/${o.length} 通过`),l===o.length?console.log("🎉 所有测试通过！太阳位置计算已修复"):console.log("⚠️ 仍有测试失败，需要进一步修复"),{passCount:l,total:o.length,results:o}}export{u as default,u as runQuickTest};
